module generators

import middle
import frontend

const (
	cgen_prelude_c99 = $embed_file("generators/preludes/cgen_c99.c")
	cgen_postlude_c99 = $embed_file("generators/postludes/cgen_c99.c")
)

struct CGenBackend {}

fn (cgen CGenBackend) generate_code(options CodeGenInterfaceOptions) ? {
	mut output := "/* Generated by BFCC */\n\n"

	output += cgen_prelude_c99.to_string()

	for tok in options.il {
		output += match tok.type_token {
			.move_right {
				"\tptr += ${tok.value};"
			}
			.move_left {
				"\tptr -= ${tok.value};"
			}
			.add {
				"\tmemory[ptr] += ${tok.value};"
			}
			.sub {
				"\tmemory[ptr] -= ${tok.value};"
			}
			.exit {
				"\treturn 0;"
			}
			.jump_if_zero {
				"label_${tok.id}:\n\tif (memory[ptr] == 0) goto label_${tok.value};"
			}
			.jump_if_not_zero {
				"\tif (memory[ptr] != 0) goto label_${tok.value};\nlabel_${tok.id}:"
			}
			.input {
				"\tmemory[ptr] = getchar();"
			}
			.output {
				"\tputchar(memory[ptr]);"
			}
		} + "\n"
	}

	output += cgen_postlude_c99.to_string()

	println(output)
}
